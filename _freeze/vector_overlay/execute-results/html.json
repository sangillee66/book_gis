{
  "hash": "ec3d38713b9fff3a4fc892993282f3ac",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"중첩 분석\"\nauthor: Sang-Il Lee\ndate-modified: last-modified\nnumber-sections: true\nformat: \n  html: \n    toc: true\ncode-link: true\ncode-copy: true\nlightbox: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n## 중첩분석\n\n필수적인 데이터를 패키지를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tmap)\nlibrary(readxl)\n```\n:::\n\n\n서울의 관련 데이터를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_gu <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_GU_2023_2Q.shp\", options = \"ENCODING=CP949\")\nseoul_dong <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_EMD_2023_2Q.shp\", options = \"ENCODING=CP949\")\nseoul_sido <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_SIDO_2023_2Q.shp\", options = \"ENCODING=CP949\")\n```\n:::\n\n\n## 종류\n\n### 포인트-인-폴리곤\n\n공간적 선택과 마찬가지로 관악구 내의 스타벅스만 선택하여 새로운 포인트 레이어를 생성한다. 우선 관악구를 선택하여 새로운 레이어를 만든다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwanak_gu <- seoul_gu |> \n  filter(\n    SGG1_NM == \"관악구\"\n  )\n```\n:::\n\n\n스타벅스 데이터를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarbucks_seoul_real <- st_read(\"D:/My R/Vector Data Manipulation Korea/starbucks_seoul.shp\", options = \"ENCODING=CP949\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\noptions:        ENCODING=CP949 \nReading layer `starbucks_seoul' from data source \n  `D:\\My R\\Vector Data Manipulation Korea\\starbucks_seoul.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 680 features and 11 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 939637.5 ymin: 1938775 xmax: 971226.8 ymax: 1962474\nProjected CRS: Korea_2000_Korea_Unified_Coordinate_System\n```\n\n\n:::\n\n```{.r .cell-code}\nstarbucks_seoul_real <- st_transform(starbucks_seoul_real, crs = st_crs(seoul_sido))\n```\n:::\n\n\n관악구에 포함되는 스타벅스 매장만 골라낸다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarbucks_gwanak <- starbucks_seoul_real |> \n  st_intersection(gwanak_gu)\n```\n:::\n\n\n지도를 생성한다. 공간적 선택의 지도와 사실상 동일하다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(seoul_gu) + tm_polygons(col = \"gray98\", lwd = 1) +\n  tm_shape(gwanak_gu) + tm_polygons(col = \"gray70\") +\n  tm_shape(starbucks_seoul_real) + tm_dots(col = \"black\", size = 0.2) +\n  tm_shape(starbucks_gwanak) + tm_dots(col = \"red\", size = 0.2) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](vector_overlay_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n### 라인-온-폴리곤\n\n공간적 선택과 마찬가지로 중구 내부의 도로망만을 선택하여 폴리라인 레이어를 생성한다. 우선 서울시 도로망 데이터를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_sn <- st_read(\"D:/My R/Vector Data Manipulation Korea/Korea_Transport_Database/seoul_link.shp\", options = \"ENCODING=CP949\")\n```\n:::\n\n\n중구만 선택한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njung_gu <- seoul_gu |> \n  filter(\n    SGG1_NM == \"중구\"\n  )\n```\n:::\n\n\n중구와 인터섹터의 관계에 있는 도로만 선택한다. 선택이 아니라 클립에 해당한다는 사실에 유의한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njung_gu_sn <- st_intersection(seoul_sn, jung_gu)\n```\n:::\n\n\n지도를 생성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(seoul_gu, is.master = TRUE) + tm_polygons(col = \"gray98\", border.col = \"gray10\", lwd = 2) +\n  tm_shape(jung_gu) + tm_polygons(col = \"gray70\", border.col = \"gray10\", lwd = 2) +\n  tm_shape(seoul_sn) + tm_lines(col = \"gray70\") +\n  tm_shape(jung_gu_sn) + tm_lines(col = \"red\", lwd = 2) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](vector_overlay_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n중구만 확대한 지도를 제작한다. 공간적 선택의 결과와 다름을 이해한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(jung_gu) + tm_polygons(col = \"gray70\", border.col = \"gray10\", lwd = 2) +\n  tm_shape(seoul_sn) + tm_lines(col = \"gray70\") +\n  tm_shape(jung_gu_sn) + tm_lines(col = \"red\", lwd = 2) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 2.5, 0.5), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](vector_overlay_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "vector_overlay_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}