{
  "hash": "b0988a26b8858c397ae30499bc4ef1a2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"일반화\"\nauthor: Sang-Il Lee\ndate-modified: last-modified\nnumber-sections: true\nformat: \n  html: \n    toc: true\ncode-link: true\ncode-copy: true\nlightbox: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n## 준비\n\n필수적인 패키지를 설치한다. 래스터 분석을 위한 기본 패키지를 [`terra`](https://rspatial.github.io/terra/)를 사용한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(terra)\nlibrary(sf)\nlibrary(tmap)\n```\n:::\n\n\n서울에 대한 SRTM 기반 DEM 데이터를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndem_seoul <- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/srtm_seoul.tif\")\ndem_seoul_mask <- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/srtm_seoul_mask.tif\")\n```\n:::\n\n\n서울의 행정구역 바운더리 파일을 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_SIDO_2023_2Q.shp\")\nseoul_gu <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_GU_2023_2Q.shp\")\nseoul_dong <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_EMD_2023_2Q.shp\")\n```\n:::\n\n\n## 애그리게이트(aggregate, 병합)\n\n`aggregate()` 함수를 이용하여 실행한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndem_seoul_agg <- aggregate(dem_seoul, fact = 10, fun = mean)\n```\n:::\n\n\n기본적인 지오메트리 파라미터값을 알아본다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndem_seoul_agg\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 117, 143, 1  (nrow, ncol, nlyr)\nresolution  : 259.2782, 259.2782  (x, y)\nextent      : 935046.3, 972123.1, 1936646, 1966982  (xmin, xmax, ymin, ymax)\ncoord. ref. : KGD2002 / Unified CS (EPSG:5179) \nsource(s)   : memory\nname        : n37_e126_1arc_v3 \nmin value   :            3.000 \nmax value   :          715.111 \n```\n\n\n:::\n:::\n\n\n지도를 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(dem_seoul_agg, raster.downsample = FALSE) + \n  tm_raster(style = \"cont\", palette = c(\"forestgreen\",\"yellow\",\"tan\",\"brown\"), title = \"Elev.(m)\") +\n  tm_shape(seoul) + tm_borders(col = \"gray20\", lwd = 1.5) +\n  tm_legend(legend.position = c(0.85, 0.06), legend.bg.color = \"white\", legend.bg.alpha = 0.6) +\n  tm_layout(inner.margins = c(0.07, 0.04, 0.06, 0.04), \n            title = \"Generalization: Aggregate\", title.size = 1, \n            title.position = c(\"LEFT\", \"TOP\")) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](raster_generalization_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "raster_generalization_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}