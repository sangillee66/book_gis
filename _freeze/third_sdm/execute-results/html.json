{
  "hash": "3f2da6bfdb4f260ccc976edfdd56c995",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"공간데이터모델\"\nauthor: Sang-Il Lee\ndate-modified: last-modified\nnumber-sections: true\nformat: \n  html: \n    toc: true\ncode-link: true\ncode-copy: true\nlightbox: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n## 정의와 개념\n\n## 개념적 모델\n\n### 객체-기반 모델\n\n### 필드-기반 모델\n\n## 논리적 모델\n\n### 벡터 모델\n\n#### 개요\n\n피처 클래스(feature class)에 대한 개념적 설명\n\n필수 패키지를 설치한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tmap)\nlibrary(readxl)\n```\n:::\n\n\n포인트 레이어로서 서울시 역 위치에 대한 셰이프 파일을 생성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_SIDO_2023_2Q.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `SEOUL_SIDO_2023_2Q' from data source \n  `D:\\My R\\Korean Administrative Areas\\행정구역 셰이프 파일\\2 Original Cleaning\\2023_2Q\\SEOUL_SIDO_2023_2Q.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 935035.3 ymin: 1936666 xmax: 972067.6 ymax: 1966987\nProjected CRS: KGD2002 / Unified CS\n```\n\n\n:::\n\n```{.r .cell-code}\nseoul_subst_coords <- read_excel(\"D:/My R/GIS/서울시 역사마스터 정보.xlsx\") \nseoul_subst <- st_as_sf(seoul_subst_coords, coords = c(\"위도\", \"경도\"), crs = 4326)\nseoul_subst <- seoul_subst |> \n  st_transform(crs = st_crs(seoul)) |> \n  st_intersection(seoul)\n```\n:::\n\n\n라인 레이어로서 서울시 도로망에 대한 셰이프 파일을 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_sn <- st_read(\"D:/My R/Vector Data Manipulation Korea/Korea_Transport_Database/seoul_link.shp\", options = \"ENCODING=CP949\")\n```\n:::\n\n\n폴리곤 레이어로서 서울시 구 경계 셰이프 파일을 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_gu <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_GU_2023_2Q.shp\")\n```\n:::\n\n\n세 개의 레이어를 합쳐 지도를 생성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(seoul) + tm_polygons(col = \"gray98\") +\n  tm_shape(seoul_sn) + tm_lines(col = \"gray70\") +\n  tm_shape(seoul_gu, is.master = TRUE) + tm_borders(lwd = 2) +\n  tm_shape(seoul_subst) + tm_symbols(col = \"black\", size = 0.2) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\n```\n\n::: {.cell-output-display}\n![피처 클래스](third_sdm_files/figure-html/fig-feature_class-1.png){#fig-feature_class width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n#### 구현\n\n#### 물리적 모델\n\n### 래스터 모델\n\n#### 개요\n\n#### 구현\n\n#### 물리적 모델\n",
    "supporting": [
      "third_sdm_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}