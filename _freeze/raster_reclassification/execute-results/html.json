{
  "hash": "9f199cff4862e8be1a01d7fcf9965f04",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"재분류\"\nauthor: Sang-Il Lee\ndate-modified: last-modified\nnumber-sections: true\nformat: \n  html: \n    toc: true\ncode-link: true\ncode-copy: true\nlightbox: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n## 준비\n\n필수적인 패키지를 설치한다. 래스터 분석을 위한 기본 패키지로 `terra`를 사용한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(terra)\nlibrary(sf)\nlibrary(tmap)\n```\n:::\n\n\n서울에 대한 SRTM 기반 DEM 데이터를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndem_seoul <- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/srtm_seoul.tif\")\ndem_seoul_mask <- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/srtm_seoul_mask.tif\")\n```\n:::\n\n\n서울의 행정구역 바운더리 파일을 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_SIDO_2023_2Q.shp\")\nseoul_gu <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_GU_2023_2Q.shp\")\nseoul_dong <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_EMD_2023_2Q.shp\")\n```\n:::\n\n\n## 정의와 구분\n\n## 로컬 재분류\n\n### 이항 매스킹\n\n이항 매스킹을 통해 새로운 래스터를 생성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndem_seoul_250 <- dem_seoul >= 250\n```\n:::\n\n\n지도를 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(dem_seoul_250, raster.downsample = FALSE) + tm_raster(style = \"cat\", labels = c(\"No\", \"Yes\"), title = \"Elev. >= 250\") +\n  tm_shape(seoul) + tm_borders(col = \"gray20\", lwd = 1.5) +\n  tm_legend(legend.position = c(0.85, 0.03), legend.bg.color = \"white\", legend.bg.alpha = 0.6) +\n  tm_layout(inner.margins = c(0.07, 0.04, 0.06, 0.04), \n            title = \"Reclassification: Binary Masking\", title.size = 1, \n            title.position = c(\"LEFT\", \"TOP\")) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](raster_reclassification_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n### 분류 순위부여\n\n분류 순위부여를 통해 새로운 래스터를 생성한다. `raster` 패키지의 `reclassify()` 함수가 `terra` 패키지에서 `classify()`로 바뀌었다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrclmat <- matrix(c(-Inf, 100, 1, 100, 200, 3, 200, 300, 5, 300, 400, 7, 400, Inf, 9), ncol = 3, byrow = TRUE)\ndem_seoul_rec <- classify(dem_seoul, rclmat, include.lowest = TRUE)\n```\n:::\n\n\n지도를 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(dem_seoul_rec, raster.downsample = FALSE) + tm_raster(style = \"cat\", title = \"Classes\") +\n  tm_shape(seoul) + tm_borders(col = \"gray20\", lwd = 1.5) +\n  tm_legend(legend.position = c(0.85, 0.03), legend.bg.color = \"white\", legend.bg.alpha = 0.6) +\n  tm_layout(inner.margins = c(0.07, 0.04, 0.06, 0.04), \n            title = \"Reclassification: Classification Ranking\", title.size = 1, \n            title.position = c(\"LEFT\", \"TOP\")) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](raster_reclassification_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "raster_reclassification_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}