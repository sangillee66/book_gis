{
  "hash": "45b4a043fb4e070a0b8fe2deb2c7db55",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"벡터 레이어 생성\"\nauthor: Sang-Il Lee\ndate-modified: last-modified\nnumber-sections: true\nformat: \n  html: \n    toc: true\ncode-link: true\ncode-copy: true\nlightbox: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n## 경위도 좌표값을 이용한 지오코딩(Geocoding)\n\n서울 열린데이터 광장에서 구한 지하철역의 경위도 좌표값을 바탕으로 포인트 레이터를 생성한다.\n\n필수 패키지를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tmap)\nlibrary(readxl)\n```\n:::\n\n\n서울시의 관련 데이터를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_gu <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_GU_2023_2Q.shp\")\nseoul_dong <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_EMD_2023_2Q.shp\")\nseoul <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_SIDO_2023_2Q.shp\")\nseoul_subst_coords <- read_excel(\"D:/My R/GIS/서울시 역사마스터 정보.xlsx\") \nseoul_subst <- st_as_sf(seoul_subst_coords, coords = c(\"위도\", \"경도\"), crs = 4326)\nseoul_subst <- seoul_subst |> \n  st_transform(crs = st_crs(seoul)) |> \n  st_intersection(seoul)\n```\n:::\n\n\n지도를 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(seoul_gu) + tm_polygons(col = \"gray95\") +\n  tm_shape(seoul_subst) + tm_symbols(col = \"black\", size = 0.2) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## 주소를 이용한 지오코딩\n\n스타벅스의 실제 위치에 대한 파일을 불러들인다. 이것은 위와 동일한 방식으로 경위도 좌표값에 기반하여 생성된 것이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarbucks_seoul_real <- st_read(\"D:/My R/Vector Data Manipulation Korea/starbucks_seoul.shp\")\nqtm(starbucks_seoul_real)\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n다음의 스타벅스의 주소를 기반으로 지오코딩하여 얻은 파일을 불러들인다. `ggmap` 패키지의 오픈 API를 이용하여 지오코딩한 것이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarbucks_seoul_geocoding <- st_read(\"D:/My R/Vector Data Manipulation Korea/starbucks_seoul.shp\")\nqtm(starbucks_seoul_geocoding)\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n지도를 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(seoul_gu) + tm_polygons(col = \"gray95\") +\n  tm_shape(starbucks_seoul_real) + tm_dots(col = \"red\", size = 0.2, alpha = 1) +\n  tm_shape(starbucks_seoul_geocoding) + tm_dots(col = \"black\", size = 0.2, alpha = 0.3) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## 센트로이드\n\n### 컨벡스헐(convex hull)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_gu_ch <- st_convex_hull(seoul_gu)\nmy_map <- tm_shape(seoul_gu) + tm_polygons() +\n  tm_shape(seoul_gu_ch) + tm_borders(col = \"red\") +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n### 최소포괄직사각형(minimum bounding rectangle)\n\n서울시 전체에 대한 MBR은 다음과 같이 구할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_mbr <- st_as_sfc(st_bbox(seoul_gu))\nqtm(seoul_mbr) + qtm(seoul_gu)\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n그런데 구 각각에 대해 MBR을 만드는 것은 쉽지 않다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbbox_wrap <- function(x) st_as_sfc(st_bbox(x))\nseoul_gu_mbr <- seoul_gu |> \n  group_by(SGG1_CD) |> \n  nest() |> \n  ungroup() |> \n  mutate(\n    bbox = map(data, bbox_wrap)\n  ) |> \n  mutate(\n    geometry = st_as_sfc(do.call(rbind, bbox), crs = st_crs(seoul_gu))\n  ) |> \n  select(-data, -bbox) |> \n  st_as_sf()\nqtm(seoul_gu_mbr) + qtm(seoul_gu)\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n이제 지도를 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(seoul_gu) + tm_polygons() +\n  tm_shape(seoul_gu_mbr) + tm_borders(col = \"red\") +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## 평균중심점(MC)\n\n## 최소포괄직사각형중심점(CMBR)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_gu_mbr_center <- st_centroid(seoul_gu_mbr)\nmy_map <- tm_shape(seoul_gu) + tm_polygons() +\n  tm_shape(seoul_gu_mbr) + tm_borders(col = \"red\", lty = 2) +\n  tm_shape(seoul_gu_mbr_center) + tm_dots(col = \"black\", size = 0.2) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## 질량중심점(CM)\n\n서울시 구의 질량중심점을 표현한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_gu_cm <- st_centroid(seoul_gu)\nmy_map <- tm_shape(seoul_gu) + tm_polygons() +\n  tm_shape(seoul_gu_cm) + tm_dots(col = \"black\", size = 0.2) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n서울시 동의 질량중심점을 표현한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_dong_cm <- st_centroid(seoul_dong)\nmy_map <- tm_shape(seoul_dong) + tm_polygons() +\n  tm_shape(seoul_dong_cm) + tm_dots(col = \"black\", size = 0.2) +\n  tm_shape(seoul_gu) + tm_borders(col = \"black\", lwd = 1) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n그런데 일부 질량중심점이 폴리곤의 외부에 위치할 수 있다. 이 문제는 다음과 같이 교정할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_dong_cm_on <- st_point_on_surface(seoul_dong)\nmy_map <- tm_shape(seoul_dong) + tm_polygons() +\n  tm_shape(seoul_dong_cm_on) + tm_dots(col = \"black\", size = 0.2) +\n  tm_shape(seoul_gu) + tm_borders(col = \"black\", lwd = 1) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04)) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](vector_layer_creation_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "vector_layer_creation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}