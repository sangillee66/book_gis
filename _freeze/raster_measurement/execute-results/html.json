{
  "hash": "9fcd5d272a5665c3ca952f9ec68d96a6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"측정\"\nauthor: Sang-Il Lee\ndate-modified: last-modified\nnumber-sections: true\nformat: \n  html: \n    toc: true\ncode-link: true\ncode-copy: true\nlightbox: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n## 준비\n\n필수적인 패키지를 설치한다. 래스터 분석을 위한 기본 패키지를 `raster`를 사용한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(terra)\nlibrary(sf)\nlibrary(tmap)\n```\n:::\n\n\n서울에 대한 SRTM 기반 DEM 데이터를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndem_seoul <- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/srtm_seoul.tif\")\ndem_seoul_mask <- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/srtm_seoul_mask.tif\")\n```\n:::\n\n\n서울의 행정구역 바운더리 파일을 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_SIDO_2023_2Q.shp\")\nseoul_gu <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_GU_2023_2Q.shp\")\nseoul_dong <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_EMD_2023_2Q.shp\")\n```\n:::\n\n\n## 기본 원리\n\n## 조널 지오메트리\n\n### 면적\n\n우선 서울구에 대한 래스터 레이어를 생성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_gu |> \n  rasterize(dem_seoul_mask, field = \"SGG1_CD\") -> seoul_gu_r\n```\n:::\n\n\n구에 해당되는 셀에 해당 구의 면적을 할당하여 새로운 래이어를 생성한다. `cellSize()` 함수를 통해 모든 셀에 해당 셀의 면적이 들어가 있는 래스터를 생성한 후, `zonal()` 함수를 적용한다. `as.raster` 아규먼트를 통해 래스터 레이어를 생성하는 것이 키포인트이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_gu_r |> \n  cellSize()/1000000 -> seoul_gu_area\n\nseoul_gu_area |> \n  zonal(seoul_gu_r, fun = \"sum\", na.rm = TRUE, as.raster = TRUE) -> seoul_gu_area_r\n```\n:::\n\n\n지도를 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(seoul_gu_area_r, raster.downsample = FALSE) + \n  tm_raster(style = \"cont\", palette = \"Purples\", title = expression(\"Area(km\"^2*\")\")) +\n  # tm_shape(seoul_gu) + tm_borders(col = \"gray80\") +\n  tm_shape(seoul) + tm_borders(col = \"gray20\", lwd = 1.5) +\n  tm_legend(legend.position = c(0.85, 0.03), legend.bg.color = \"white\", legend.bg.alpha = 0.6) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04), \n            title = \"Measurement: Area\", title.size = 1, \n            title.position = c(\"LEFT\", \"TOP\")) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](raster_measurement_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n### 주변길이\n\n약간의 계산이 필요하다. 속도가 상당히 느리다. 성공은 했지만, 다른 방법이 있을 듯 하다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul |> \n  rasterize(dem_seoul_mask, field = \"SD_CD\") -> seoul_r \n\nseoul_perimeter_r <- seoul_gu_r\nregion_ids <- unique(values(seoul_gu_r))\nregion_ids <- region_ids[!is.na(region_ids)]\n\nfor (region_id in region_ids) {\n  region_r <- seoul_gu_r\n  region_r[region_r != region_id] <- NA # 구별로 완전히 독립시킨다. 그래야만 boundaries() 함수가 제대로 작동\n  region_boundary <- boundaries(region_r, classes = TRUE)\n  perimeter_cells <- sum(values(region_boundary) == 1, na.rm = TRUE)\n  cell_res <- res(seoul_gu_r)[1]  \n  perimeter <- perimeter_cells * cell_res / 1000\n  region_r_r <- seoul_gu_r == region_id # 값을 셀로 옮기려면 서울 전체가 살아있는 raster가 존재해야 함.\n  seoul_perimeter_r[region_r_r] <- perimeter\n}\n\nwriteRaster(seoul_perimeter_r, \"seoul_perimeter_r.tif\", overwrite = TRUE)\n```\n:::\n\n\n주변 길이에 데이터를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul_perimeter_r <- rast(\"seoul_perimeter_r.tif\")\n```\n:::\n\n\n지도를 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(seoul_perimeter_r, raster.downsample = FALSE) + \n  tm_raster(style = \"cont\", palette = \"Purples\", title = \"Perimeter(km)\") +\n  # tm_shape(seoul_gu) + tm_borders(col = \"gray80\") +\n  tm_shape(seoul) + tm_borders(col = \"gray20\", lwd = 1.5) +\n  tm_legend(legend.position = c(0.85, 0.02), legend.bg.color = \"white\", legend.bg.alpha = 0.6) +\n  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.04), \n            title = \"Measurement: Perimeter\", title.size = 1, \n            title.position = c(\"LEFT\", \"TOP\")) + \n  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = \"gray60\", position = c(0.03, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](raster_measurement_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "raster_measurement_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}