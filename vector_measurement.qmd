---
title: "측정"
author: Sang-Il Lee
date-modified: last-modified
number-sections: true
format: 
  html: 
    toc: true
code-link: true
code-copy: true
lightbox: true
execute: 
  warning: false
  error: false
  freeze: auto
editor: visual
editor_options: 
  chunk_output_type: console
---

## 폴리곤의 면적과 주변길이

필수적인 패키지를 불러온다.

```{r}
library(sf)
library(tmap)
library(tidyverse)
```

서울시의 구와 동 단위 데이터를 예제로 사용한다.

```{r}
#| results: hide
seoul_gu <- st_read("D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_GU_2023_2Q.shp")
seoul_dong <- st_read("D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_EMD_2023_2Q.shp")
```

면적을 계산한다.

```{r}
#| results: hide
st_area(seoul_gu)
st_area(seoul_dong)
```

주변길이(perimeter)를 계산한다.

```{r}
#| results: hide
st_length(st_cast(seoul_gu, "MULTILINESTRING"))
st_area(seoul_dong)
```

## 폴리곤의 형태

콤펙트비(compactness ratio)를 다음의 수식에 의거해 계산한다.

$$
S_1=A/(P^2/4\pi)=4\pi A/P^2
$$

$$
S_2=(2\pi \sqrt{A/\pi})/P=2\sqrt{\pi A}/P=3.545\sqrt{A}/P
$$

함수를 작성한다.

```{r}
snu_poly_shape_index <- function(poly.shp){
  A <- st_area(poly.shp)
  P <- st_length(st_cast(poly.shp, "MULTILINESTRING"))
  S.1 <- 4*pi*A/P^2
  S.2 <- sqrt(S.1)
  poly.shp$S1 <- as.numeric(S.1)
  poly.shp$S2 <- as.numeric(S.2)
  poly.shp
}
```

서울시 구의 콤펙트비를 계산한다.

```{r}
seoul_gu <- snu_poly_shape_index(seoul_gu)
seoul_gu |> slice_max(S1) 
seoul_gu |> slice_min(S1)
```

서울시 동의 콤펙트비를 계산한다.

```{r}
seoul_dong <- snu_poly_shape_index(seoul_dong)
seoul_dong |> slice_max(S1) 
seoul_dong |> slice_min(S1)
```

서울시 구의 콤펙트비 지도를 제작한다.

```{r}
min.val <- seoul_gu |> pull(S1) |> min() |> format(digits = 3)
max.val <- seoul_gu |> pull(S1) |> max() |> format(digits = 3)
my_map <- tm_shape(seoul_gu) + 
  tm_polygons(
    col = "S1", 
    palette = "BuPu", 
    style = "fixed", 
    breaks = c(0, 0.3, 0.4, 0.5, 0.6, 1),
    labels = c(paste0("< 0.3", " (Min. ", min.val, ")"), "0.3 ~ 0.4", "0.4 ~ 0.5", "0.5 ~ 0.6", paste0(">= 0.6", " (Max. ", max.val, ")")),     title = "Compactness", legend.show = TRUE) +
  tm_legend(legend.position = c(0.81, 0.03)) + 
  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.13)) + 
  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = "gray60", position = c(0.03, 0.01))
my_map 
```

```{r}
#| echo: false
#| output: false
min.val <- seoul_gu |> pull(S1) |> min() |> format(digits = 3)
max.val <- seoul_gu |> pull(S1) |> max() |> format(digits = 3)
my_map <- tm_shape(seoul_gu) + 
  tm_polygons(
    col = "S1", 
    palette = "BuPu", 
    style = "fixed", 
    breaks = c(0, 0.3, 0.4, 0.5, 0.6, 1),
    labels = c(paste0("< 0.3", " (Min. ", min.val, ")"), "0.3 ~ 0.4", "0.4 ~ 0.5", "0.5 ~ 0.6", paste0(">= 0.6", " (Max. ", max.val, ")")),     title = "Compactness", legend.show = TRUE) +
  tm_legend(legend.title.size = 1.5, legend.text.size = 1.25, legend.position = c(0.84, 0.06)) + 
  tm_layout(inner.margins = c(0.05, 0.04, 0.05, 0.1)) + 
  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = "gray60", position = c(0.03, 0.01)) + 
  tm_credits(text = "SANG-IL LEE, Geography Education at SNU, 2024", size = 0.8, position = c(0.76, 0.01))
my_map 
my.path.name <- "D:/My Classes/2024년 2학기/지리정보체계와 지리교육/이미지/"
my.file.name <- paste0(my.path.name, "벡터_형태_서울_구", ".jpg")
tmap_save(my_map, filename = my.file.name, height = 12.1, dpi = 600)
```

서울시 동의 콤펙트비 지도를 제작한다.

```{r}
min.val <- seoul_dong |> pull(S1) |> min() |> format(digits = 3)
max.val <- seoul_dong |> pull(S1) |> max() |> format(digits = 3)
my_map <- tm_shape(seoul_dong) + 
  tm_polygons(
    col = "S1", 
    palette = "BuPu", 
    style = "fixed", 
    breaks = c(0, 0.3, 0.4, 0.5, 0.6, 1),
    labels = c(paste0("< 0.3", " (Min. ", min.val, ")"), "0.3 ~ 0.4", "0.4 ~ 0.5", "0.5 ~ 0.6", paste0(">= 0.6", " (Max. ", max.val, ")")),     title = "Compactness", legend.show = TRUE) +
  tm_shape(seoul_gu) + tm_borders(col = "gray20", lwd = 2) +
  tm_legend(legend.position = c(0.81, 0.03)) + 
  tm_layout(inner.margins = c(0.06, 0.04, 0.04, 0.13)) + 
  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = "gray60", position = c(0.03, 0.01))
my_map 
```

```{r}
#| echo: false
#| output: false
min.val <- seoul_dong |> pull(S1) |> min() |> format(digits = 3)
max.val <- seoul_dong |> pull(S1) |> max() |> format(digits = 3)
my_map <- tm_shape(seoul_dong) + 
  tm_polygons(
    col = "S1", 
    palette = "BuPu", 
    style = "fixed", 
    breaks = c(0, 0.3, 0.4, 0.5, 0.6, 1),
    labels = c(paste0("< 0.3", " (Min. ", min.val, ")"), "0.3 ~ 0.4", "0.4 ~ 0.5", "0.5 ~ 0.6", paste0(">= 0.6", " (Max. ", max.val, ")")),     title = "Compactness", legend.show = TRUE) +
  tm_shape(seoul_gu) + tm_borders(col = "gray20", lwd = 2) +
  tm_legend(legend.title.size = 1.5, legend.text.size = 1.25, legend.position = c(0.84, 0.06)) + 
  tm_layout(inner.margins = c(0.05, 0.04, 0.05, 0.1)) +    
  tm_scale_bar(breaks = seq(0, 20, 4), color.dark = "gray60", position = c(0.03, 0.01)) + 
  tm_credits(text = "SANG-IL LEE, Geography Education at SNU, 2024", size = 0.8, position = c(0.76, 0.01))
my_map 
my.path.name <- "D:/My Classes/2024년 2학기/지리정보체계와 지리교육/이미지/"
my.file.name <- paste0(my.path.name, "벡터_형태_서울_동", ".jpg")
tmap_save(my_map, filename = my.file.name, height = 12.1, dpi = 600)
```
